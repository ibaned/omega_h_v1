.TH osh_adapt 3 "4/19/2016" " " ""
.SH NAME
osh_adapt \-  Adapts the mesh to a given size field. 
.SH SYNOPSIS
.nf
unsigned osh_adapt(osh_t m,
    double size_ratio_floor,
    double good_element_quality,
    unsigned nsliver_layers,
    unsigned max_passes)
.fi
The size field is currently a single value per vertex
describing the desired length of mesh edges at that location,
it must be called "adapt_size".
The return value will be zero if no connectivity changes are made.

Collective

.SH INPUT PARAMETERS
.PD 0
.TP
.B m 
- The mesh object.
.PD 1
.PD 0
.TP
.B size_quality_floor 
- Range [0.0 - 0.5], default 1/3. Edges shorter than this
times their desired size will attempt coarsening.
Setting this to zero effectively disables coarsening.
.PD 1

.PD 0
.TP
.B good_element_quality 
- Range [0.0 - 1.0], default 0.3. No elements with lower
quality will be created, and existing elements with
lower quality will attempt shape correction.
In most unstructured meshes, having all elements above 30%
is actually quite good. Elements below 10% are usually both
undesirable numerically and hard for omega_h to fix.
The warp_3d test keeps bad elements between 20% and 30%.
Setting this to zero effectively disables shape correction.
(currently the code will crash hard if it cannot satisfy
this minimum quality requirement, I may remove that).
.PD 1

.PD 0
.TP
.B nsliver_layers 
- Range [0 - ?], default 4. Number of layers of elements around
a sliver to consider for correction.
When trying to fix a low quality element,
it can often help to improve the quality of neighboring
elements first. Currently layers are based on
element-to-element adjacency via faces.
This parameter controls how many such layers will be
considered for improvement around a bad element.
.PD 1

.PD 0
.TP
.B max_passes 
- Range [1 - 100], default 50. Maximum number of modification passes
before the program fails. Omega_h combines many independent
operations into a batch which constructs a whole new
mesh from an old one. this is referred to as a pass.
In order to prevent an infinite loop in the case of
excessive size or quality demands by the user,
the code will fail hard after this many passes are done.
This is similar to a limit on numerical solver iterations.
Under active conditions 12 passes is not uncommon.
50 passes or more suggests bad
inputs, so that is a reasonable max value.
.PD 1

Level: advanced

.SH KEYWORDS
adapt
.br
.SH SEE ALSO
osh_new_field(), osh_identity_size()
.br
